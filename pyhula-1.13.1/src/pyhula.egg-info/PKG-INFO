Metadata-Version: 2.4
Name: pyhula
Version: 1.13.1
Summary: PyHula - Hula drone control library (Python 3.8+ compatible)
Home-page: https://github.com/janisgra/pyhula-win11
Author: HighGreat
Author-email: highgreat@hg-fly.com
Project-URL: Bug Reports, https://github.com/janisgra/pyhula-win11/issues
Project-URL: Source, https://github.com/janisgra/pyhula-win11
Project-URL: Documentation, https://github.com/janisgra/pyhula-win11/blob/main/README.md
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: C
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Hardware :: Hardware Drivers
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.19.0
Requires-Dist: opencv-python>=4.5.0
Requires-Dist: pyserial>=3.4
Requires-Dist: pymavlink>=2.4.0
Requires-Dist: scipy>=1.6.0
Requires-Dist: matplotlib>=3.3.0
Requires-Dist: pillow>=8.0.0
Requires-Dist: pytest>=6.0
Requires-Dist: pytest-cov>=2.10
Requires-Dist: black>=21.0
Requires-Dist: flake8>=3.8
Requires-Dist: sphinx>=3.0.0
Requires-Dist: sphinx-rtd-theme>=0.5.0
Requires-Dist: setuptools>=50.0
Requires-Dist: wheel>=0.36.0
Requires-Dist: Cython>=0.29.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov>=2.10; extra == "dev"
Requires-Dist: black>=21.0; extra == "dev"
Requires-Dist: flake8>=3.8; extra == "dev"
Provides-Extra: visualization
Requires-Dist: matplotlib>=3.3.0; extra == "visualization"
Requires-Dist: pillow>=8.0.0; extra == "visualization"
Provides-Extra: docs
Requires-Dist: sphinx>=3.0.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=0.5.0; extra == "docs"
Provides-Extra: all
Requires-Dist: pytest>=6.0; extra == "all"
Requires-Dist: pytest-cov>=2.10; extra == "all"
Requires-Dist: matplotlib>=3.3.0; extra == "all"
Requires-Dist: pillow>=8.0.0; extra == "all"
Requires-Dist: sphinx>=3.0.0; extra == "all"
Requires-Dist: sphinx-rtd-theme>=0.5.0; extra == "all"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# PyHula - Python 3.8+ Compatible Drone Control Library

[![Python Version](https://img.shields.io/badge/python-3.8%2B-blue.svg)](https://python.org)
[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)
[![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg)](README.md)

## Overview

PyHula is a modernized Python library for controlling Hula drones, originally designed for Python 3.6 and now fully compatible with Python 3.8 through Python 3.13+ and future versions.

This library provides comprehensive drone control capabilities including flight control, formation flying, LED control, and real-time communication using the MAVLink protocol.

## Features

- üöÅ **Drone Flight Control**: Complete flight control API for takeoff, landing, and maneuvering
- üîó **MAVLink Communication**: Full MAVLink protocol support for robust drone communication
- üé≠ **Formation Flying**: Advanced algorithms for coordinated multi-drone operations
- üí° **LED Control**: RGB LED control for visual effects and status indication
- üìä **Real-time Data**: Live telemetry and sensor data processing
- üñ•Ô∏è **Cross-platform**: Windows, Linux, and macOS support
- üêç **Modern Python**: Python 3.8+ compatibility with future-proof design

## Installation

### Quick Start (Complete Setup)

For a complete one-click installation that installs everything:

**Windows:**
```cmd
# Double-click or run in Command Prompt
setup_complete.bat
```

**Linux/macOS:**
```bash
# Make executable and run
chmod +x setup_complete.sh
./setup_complete.sh
```

**Cross-platform:**
```bash
# Complete setup including PyHula build
python setup_complete/setup_complete.py
```

### Manual Installation Options

#### Option 1: Dependencies Only

**Windows:**
```cmd
install_dependencies\install_dependencies.bat
```

**Linux/macOS:**
```bash
chmod +x install_dependencies/install_dependencies.sh
./install_dependencies/install_dependencies.sh
```

**Cross-platform:**
```bash
python install_dependencies/install_dependencies.py
```

#### Option 2: Build from Source
```bash
# Install with all dependencies
pip install pyhula[all]

# Install with visualization support
pip install pyhula[visualization]

# Install development dependencies
pip install pyhula[dev]
```

### Build from Source

```bash
# Clone the repository
git clone https://github.com/janisgra/pyhula-win11.git
cd pyhula-win11/pyhula-1.13.1

# Install dependencies
pip install -r requirements.txt

# Build the library
python setup.py build_ext --inplace

# Create wheel
python setup.py bdist_wheel

# Install
pip install dist/pyhula-1.13.1-*.whl
```

## Quick Start

```python
import pyhula
from pyhula.pypack.fylo import commandprocessor, config, mavlink
from pyhula.pypack.system import buffer, command, datacenter, network

# Initialize drone communication
drone = commandprocessor.CommandProcessor()

# Basic flight commands
takeoff_cmd = commandprocessor.SFTakeoffCP()
drone.send_command(takeoff_cmd)

# LED control
led_cmd = commandprocessor.SFLamplight()
led_cmd.set_color(255, 0, 0)  # Red
drone.send_command(led_cmd)

# Landing
landing_cmd = commandprocessor.SFTouchdownCP()
drone.send_command(landing_cmd)
```

## API Documentation

### Core Modules

- **`pyhula.pypack.fylo.commandprocessor`**: Main command processing and drone control
- **`pyhula.pypack.fylo.mavlink`**: MAVLink protocol implementation
- **`pyhula.pypack.fylo.config`**: Configuration management
- **`pyhula.pypack.system.buffer`**: Data buffering and management
- **`pyhula.pypack.system.network`**: Network communication
- **`pyhula.pypack.system.datacenter`**: Central data processing

### Command Classes

- **`CommandProcessor`**: Main command interface
- **`SFTakeoffCP`**: Takeoff command
- **`SFTouchdownCP`**: Landing command
- **`SFLamplight`**: LED control
- **`SFForwardCP`**: Movement commands

## Supported Python Versions

| Python Version | Status | Notes |
|----------------|--------|-------|
| 3.6 |  Legacy | Original version (deprecated) |
| 3.7 |  Legacy | Not tested |
| 3.8 |  Supported | Not tested |
| 3.9 |  Supported | Not tested |
| 3.10 |  Supported | Not tested |
| 3.11 |  Supported | Not tested |
| 3.12 |  Supported | Not tested |
| 3.13 |  Supported | Latest tested version 

## Platform Support

| Platform | Status | Notes |
|----------|--------|-------|
| Windows 10/11 |  Fully Supported | Primary development platform |
| Linux |  Experimental | Ubuntu 20.04+  |
| macOS |  Experimental | Intel and Apple Silicon |

## Building for Different Platforms

### Windows
```bash
# Using Visual Studio Build Tools
python setup.py build_ext --inplace
python setup.py bdist_wheel
```

### Linux
```bash
# Using GCC
sudo apt-get install python3-dev build-essential
python setup.py build_ext --inplace
python setup.py bdist_wheel
```

### macOS
```bash
# Using Xcode Command Line Tools
xcode-select --install
python setup.py build_ext --inplace
python setup.py bdist_wheel
```

## Changelog

### v1.13.1 (Python 3.13+ Compatible)
-  **BREAKING**: Dropped Python 3.6/3.7 support
-  **NEW**: Full Python 3.8-3.13+ compatibility
-  **FIXED**: Cython import compatibility issues
-  **FIXED**: Module name parsing corruption
-  **IMPROVED**: Modern setuptools configuration
-  **IMPROVED**: Better error handling and logging
-  **IMPROVED**: Cross-platform build support
-  **ADDED**: Comprehensive dependency management
-  **ADDED**: Development and testing tools

### v1.1.7 (Previous)
- Original Python 3.6 version with compatibility patches

### v1.1.4 (Legacy)
- Original HighGreat release

## Troubleshooting

### Common Issues

1. **Import Error: No module named 'cv2'**
```bash
pip install opencv-python
```

2. **Import Error: No module named 'pymavlink'**
```bash
pip install pymavlink
```

3. **Build Errors on Windows**
   - Install Visual Studio Build Tools 2022
   - Ensure Windows SDK is installed

4. **Build Errors on Linux**
```bash
sudo apt-get install python3-dev build-essential
```

### Getting Help

1. Check the [Issues](https://github.com/janisgra/pyhula-win11/issues) page
2. Review the troubleshooting section above
3. Ensure all dependencies are installed
4. Verify Python version compatibility

## License

This addon project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Original Library Information

This is a modernized version of the PyHula library originally created by HighGreat for Python 3.6. The original library has been ported to support modern Python versions while maintaining full API compatibility.

**Original Author**: HighGreat  
**Original Email**: highgreat@hg-fly.com  

---

**Note**: This library is designed for educational and development purposes. Always follow local regulations and safety guidelines when operating drones.
